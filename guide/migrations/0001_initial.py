# Generated by Django 5.0 on 2024-12-28 17:39

import django.db.models.deletion
import guide.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Guide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('is_occupied', models.BooleanField(default=False)),
                ('is_super_guide', models.BooleanField(default=False)),
                ('country', models.CharField(choices=[('India', 'India')], max_length=50)),
                ('state', models.CharField(choices=[('Andhra Pradesh', 'Andhra Pradesh'), ('Uttar Pradesh', 'Uttar Pradesh'), ('Delhi', 'Delhi'), ('Maharashtra', 'Maharashtra'), ('West Bengal', 'West Bengal'), ('Karnataka', 'Karnataka'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Telangana', 'Telangana'), ('Meghalaya', 'Meghalaya'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('Andaman and Nicobar Islands', 'Andaman and Nicobar Islands'), ('Jammu & Kashmir', 'Jammu & Kashmir'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Gujarat', 'Gujarat')], max_length=50)),
                ('city', models.CharField(choices=[('Vijayawada', 'Vijayawada'), ('Agra', 'Agra'), ('New Delhi', 'New Delhi'), ('Mumbai', 'Mumbai'), ('Kolkata', 'Kolkata'), ('Mysore', 'Mysore'), ('Amritsar', 'Amritsar'), ('Jaipur', 'Jaipur'), ('Hyderabad', 'Hyderabad'), ('Shillong', 'Shillong'), ('Sanchi', 'Sanchi'), ('Rishikesh', 'Rishikesh'), ('Port Blair', 'Port Blair'), ('Hospet', 'Hospet'), ('Leh', 'Leh'), ('Aurangabad', 'Aurangabad'), ('Gangtok', 'Gangtok'), ('Madikeri', 'Madikeri'), ('Kodaikanal', 'Kodaikanal'), ('Bhuj', 'Bhuj')], max_length=50)),
                ('place', models.CharField(choices=[('Sunrise Park', 'Sunrise Park'), ('The Taj Mahal', 'The Taj Mahal'), ('Qutub Minar', 'Qutub Minar'), ('India Gate', 'India Gate'), ('Red Fort', 'Red Fort'), ('Gateway of India', 'Gateway of India'), ('Victoria Memorial', 'Victoria Memorial'), ('Mysore Palace', 'Mysore Palace'), ('Golden Temple', 'Golden Temple'), ('Chichen Itza', 'Chichen Itza'), ('The Lotus Temple', 'The Lotus Temple'), ('Charminar', 'Charminar'), ('Elephant Falls', 'Elephant Falls'), ('Sanchi Stupa', 'Sanchi Stupa'), ('Rishikesh', 'Rishikesh'), ('Andaman Islands', 'Andaman Islands'), ('Hampi', 'Hampi'), ('Leh-Ladakh', 'Leh-Ladakh'), ('Ajanta Caves', 'Ajanta Caves'), ('Sikkim', 'Sikkim'), ('Coorg', 'Coorg'), ('Kodaikanal', 'Kodaikanal'), ('Rann of Kutch', 'Rann of Kutch'), ('Sundarbans', 'Sundarbans')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('location_on_map', models.URLField(max_length=1000)),
                ('area_size', models.CharField(blank=True, help_text='Enter the size of the area (e.g., in square meters)', max_length=255, null=True)),
                ('history', models.TextField(help_text='Provide a detailed history or background information related to the entity.')),
                ('speciality', models.TextField(help_text='Describe the main specialties or unique features of the entity.')),
                ('best_months_to_visit', models.CharField(help_text="Enter the best months to visit, separated by commas (e.g., 'January, February, March').", max_length=255)),
                ('appealing_text', models.TextField(blank=True, help_text='Add a brief, engaging description to attract and retain users.', null=True)),
                ('front_image', models.ImageField(default='no picture', upload_to=guide.models.place_front_image_upload)),
                ('nearest_cities', models.TextField(help_text='List nearby cities, separated by commas.')),
                ('airports', models.TextField(help_text='List nearby airports, separated by commas.')),
                ('railway_stations', models.TextField(help_text='List nearby railway stations, separated by commas.')),
                ('by_road_distances_from_railway_stations', models.TextField(help_text='Enter road distances to nearby railway stations.(railway_station, distance)')),
                ('by_road_distances_from_airports', models.TextField(help_text='Enter road distances to nearby airports.(airports, distance)')),
                ('by_road_distances_from_nearest_cities', models.TextField(help_text='Enter road distances to nearby cities.(nearest_cities, distance)')),
                ('weekly_closed_on', models.CharField(blank=True, choices=[('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], help_text='Day of the week when the tour place is regularly closed.', max_length=20, null=True)),
                ('special_closed_dates', models.TextField(blank=True, help_text="Special dates when the tour place is closed, formatted as a comma-separated list (e.g., '2024-12-25, 2025-01-01').", null=True)),
                ('week_days_opening_time', models.TimeField(blank=True, null=True)),
                ('week_days_closing_time', models.TimeField(blank=True, null=True)),
                ('weekends_opening_time', models.TimeField(blank=True, null=True)),
                ('weekends_closing_time', models.TimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('speciality', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('weekly_closed_on', models.CharField(blank=True, choices=[('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], help_text='Day of the week when the tour place is regularly closed.', max_length=20, null=True)),
                ('open_time', models.CharField(max_length=50)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctors', to='guide.guide')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('guide', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='guide.guide')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=guide.models.place_image_upload_to)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='guide.place')),
            ],
        ),
    ]
