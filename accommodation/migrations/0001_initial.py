# Generated by Django 5.0 on 2025-01-06 12:02

import accommodation.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_owner_name', models.CharField(max_length=255)),
                ('owner_phone_number', models.CharField(max_length=11, unique=True)),
                ('owner_email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('hotel_name', models.CharField(max_length=255, unique=True)),
                ('hotel_phone_number', models.CharField(max_length=11, unique=True)),
                ('hotel_email', models.EmailField(max_length=254, unique=True)),
                ('hotel_address', models.TextField()),
                ('ratings', models.FloatField(help_text='Enter a rating between 0 and 10.', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('location_on_map', models.URLField()),
                ('description', models.TextField(blank=True, null=True)),
                ('country', models.CharField(choices=[('India', 'India')], max_length=50)),
                ('state', models.CharField(choices=[('Andhra Pradesh', 'Andhra Pradesh'), ('Uttar Pradesh', 'Uttar Pradesh'), ('Delhi', 'Delhi'), ('Maharashtra', 'Maharashtra'), ('West Bengal', 'West Bengal'), ('Karnataka', 'Karnataka'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Telangana', 'Telangana'), ('Meghalaya', 'Meghalaya'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('Andaman and Nicobar Islands', 'Andaman and Nicobar Islands'), ('Jammu & Kashmir', 'Jammu & Kashmir'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Gujarat', 'Gujarat')], max_length=50)),
                ('city', models.CharField(choices=[('Vijayawada', 'Vijayawada'), ('Agra', 'Agra'), ('New Delhi', 'New Delhi'), ('Mumbai', 'Mumbai'), ('Kolkata', 'Kolkata'), ('Mysore', 'Mysore'), ('Amritsar', 'Amritsar'), ('Jaipur', 'Jaipur'), ('Hyderabad', 'Hyderabad'), ('Shillong', 'Shillong'), ('Sanchi', 'Sanchi'), ('Rishikesh', 'Rishikesh'), ('Port Blair', 'Port Blair'), ('Hospet', 'Hospet'), ('Leh', 'Leh'), ('Aurangabad', 'Aurangabad'), ('Gangtok', 'Gangtok'), ('Madikeri', 'Madikeri'), ('Kodaikanal', 'Kodaikanal'), ('Bhuj', 'Bhuj')], max_length=50)),
                ('place', models.CharField(choices=[('Sunrise Park', 'Sunrise Park'), ('The Taj Mahal', 'The Taj Mahal'), ('Qutub Minar', 'Qutub Minar'), ('India Gate', 'India Gate'), ('Red Fort', 'Red Fort'), ('Gateway of India', 'Gateway of India'), ('Victoria Memorial', 'Victoria Memorial'), ('Mysore Palace', 'Mysore Palace'), ('Golden Temple', 'Golden Temple'), ('Chichen Itza', 'Chichen Itza'), ('The Lotus Temple', 'The Lotus Temple'), ('Charminar', 'Charminar'), ('Elephant Falls', 'Elephant Falls'), ('Sanchi Stupa', 'Sanchi Stupa'), ('Rishikesh', 'Rishikesh'), ('Andaman Islands', 'Andaman Islands'), ('Hampi', 'Hampi'), ('Leh-Ladakh', 'Leh-Ladakh'), ('Ajanta Caves', 'Ajanta Caves'), ('Sikkim', 'Sikkim'), ('Coorg', 'Coorg'), ('Kodaikanal', 'Kodaikanal'), ('Rann of Kutch', 'Rann of Kutch'), ('Sundarbans', 'Sundarbans')], max_length=50)),
                ('weekly_closed_on', models.CharField(blank=True, choices=[('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], help_text='Day of the week when the tour place is regularly closed.', max_length=20, null=True)),
                ('special_closed_dates', models.TextField(blank=True, help_text="Special dates when the tour place is closed, formatted as a comma-separated list (e.g., '2024-12-25, 2025-01-01').", null=True)),
                ('week_days_opening_time', models.TimeField(blank=True, null=True)),
                ('week_days_closing_time', models.TimeField(blank=True, null=True)),
                ('weekends_opening_time', models.TimeField(blank=True, null=True)),
                ('weekends_closing_time', models.TimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HotelImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='hotel_image', max_length=100)),
                ('image', models.ImageField(upload_to=accommodation.models.hotel_image_upload_to)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='accommodation.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='HotelRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_category', models.CharField(choices=[('AC', 'AC'), ('Non-AC', 'Non-AC')], max_length=10)),
                ('room_type', models.CharField(choices=[('Single Bed', 'Single Bed'), ('Double Bed', 'Double Bed'), ('Suite', 'Suite')], max_length=20)),
                ('total_rooms', models.PositiveIntegerField(default=0)),
                ('available_rooms', models.PositiveIntegerField(default=0)),
                ('price_per_6hrs', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='accommodation.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hotel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accommodation.hotel')),
            ],
        ),
    ]
